/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LinkedinSchool from '../model/LinkedinSchool';

/**
* SchoolAPI service.
* @module api/SchoolAPIApi
* @version 1.0.0
*/
export default class SchoolAPIApi {

    /**
    * Constructs a new SchoolAPIApi. 
    * @alias module:api/SchoolAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the schoolProfileEndpoint operation.
     * @callback module:api/SchoolAPIApi~schoolProfileEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LinkedinSchool} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cost: 1 credit / successful request. Get structured data of a LinkedIn School Profile
     * @param {String} url      URL of the LinkedIn School Profile to crawl.      URL should be in the format of `https://www.linkedin.com/school/<public_identifier>`     
     * @param {Object} opts Optional parameters
     * @param {String} opts.useCache `if-present` The default behavior. Fetches profile from cache regardless of age of profile. If profile is not available in cache, API will attempt to source profile externally.  `if-recent` API will make a best effort to return a fresh profile no older than 29 days.Costs an extra `1` credit on top of the cost of the base endpoint.
     * @param {module:api/SchoolAPIApi~schoolProfileEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LinkedinSchool}
     */
    schoolProfileEndpoint(url, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling schoolProfileEndpoint");
      }

      let pathParams = {
      };
      let queryParams = {
        'url': url,
        'use_cache': opts['useCache']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LinkedinSchool;
      return this.apiClient.callApi(
        '/api/linkedin/school', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
