/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PublicationPublishedOn from './PublicationPublishedOn';

/**
 * The Publication model module.
 * @module model/Publication
 * @version 1.0.0
 */
class Publication {
    /**
     * Constructs a new <code>Publication</code>.
     * @alias module:model/Publication
     */
    constructor() { 
        
        Publication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Publication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Publication} obj Optional instance to populate.
     * @return {module:model/Publication} The populated <code>Publication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Publication();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('published_on')) {
                obj['published_on'] = PublicationPublishedOn.constructFromObject(data['published_on']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Publication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Publication</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        // validate the optional field `published_on`
        if (data['published_on']) { // data not null
          PublicationPublishedOn.validateJSON(data['published_on']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Name of the publication.
 * @member {String} name
 */
Publication.prototype['name'] = undefined;

/**
 * The publishing organisation body.
 * @member {String} publisher
 */
Publication.prototype['publisher'] = undefined;

/**
 * @member {module:model/PublicationPublishedOn} published_on
 */
Publication.prototype['published_on'] = undefined;

/**
 * Description of the publication.
 * @member {String} description
 */
Publication.prototype['description'] = undefined;

/**
 * URL of the publication.
 * @member {String} url
 */
Publication.prototype['url'] = undefined;






export default Publication;

