/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyUpdatePostedOn from './CompanyUpdatePostedOn';

/**
 * The Certification model module.
 * @module model/Certification
 * @version 1.0.0
 */
class Certification {
    /**
     * Constructs a new <code>Certification</code>.
     * @alias module:model/Certification
     */
    constructor() { 
        
        Certification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Certification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Certification} obj Optional instance to populate.
     * @return {module:model/Certification} The populated <code>Certification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Certification();

            if (data.hasOwnProperty('starts_at')) {
                obj['starts_at'] = CompanyUpdatePostedOn.constructFromObject(data['starts_at']);
            }
            if (data.hasOwnProperty('ends_at')) {
                obj['ends_at'] = CompanyUpdatePostedOn.constructFromObject(data['ends_at']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('license_number')) {
                obj['license_number'] = ApiClient.convertToType(data['license_number'], 'String');
            }
            if (data.hasOwnProperty('display_source')) {
                obj['display_source'] = ApiClient.convertToType(data['display_source'], 'String');
            }
            if (data.hasOwnProperty('authority')) {
                obj['authority'] = ApiClient.convertToType(data['authority'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Certification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Certification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `starts_at`
        if (data['starts_at']) { // data not null
          CompanyUpdatePostedOn.validateJSON(data['starts_at']);
        }
        // validate the optional field `ends_at`
        if (data['ends_at']) { // data not null
          CompanyUpdatePostedOn.validateJSON(data['ends_at']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['license_number'] && !(typeof data['license_number'] === 'string' || data['license_number'] instanceof String)) {
            throw new Error("Expected the field `license_number` to be a primitive type in the JSON string but got " + data['license_number']);
        }
        // ensure the json data is a string
        if (data['display_source'] && !(typeof data['display_source'] === 'string' || data['display_source'] instanceof String)) {
            throw new Error("Expected the field `display_source` to be a primitive type in the JSON string but got " + data['display_source']);
        }
        // ensure the json data is a string
        if (data['authority'] && !(typeof data['authority'] === 'string' || data['authority'] instanceof String)) {
            throw new Error("Expected the field `authority` to be a primitive type in the JSON string but got " + data['authority']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {module:model/CompanyUpdatePostedOn} starts_at
 */
Certification.prototype['starts_at'] = undefined;

/**
 * @member {module:model/CompanyUpdatePostedOn} ends_at
 */
Certification.prototype['ends_at'] = undefined;

/**
 * Name of the course or program.
 * @member {String} name
 */
Certification.prototype['name'] = undefined;

/**
 * @member {String} license_number
 */
Certification.prototype['license_number'] = undefined;

/**
 * @member {String} display_source
 */
Certification.prototype['display_source'] = undefined;

/**
 * The organisation body issuing this certificate.
 * @member {String} authority
 */
Certification.prototype['authority'] = undefined;

/**
 * @member {String} url
 */
Certification.prototype['url'] = undefined;






export default Certification;

