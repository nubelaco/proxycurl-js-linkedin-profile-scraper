/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Job model module.
 * @module model/Job
 * @version 1.0.0
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('company_url')) {
                obj['company_url'] = ApiClient.convertToType(data['company_url'], 'String');
            }
            if (data.hasOwnProperty('job_title')) {
                obj['job_title'] = ApiClient.convertToType(data['job_title'], 'String');
            }
            if (data.hasOwnProperty('job_url')) {
                obj['job_url'] = ApiClient.convertToType(data['job_url'], 'String');
            }
            if (data.hasOwnProperty('list_date')) {
                obj['list_date'] = ApiClient.convertToType(data['list_date'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Job</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Job</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['company_url'] && !(typeof data['company_url'] === 'string' || data['company_url'] instanceof String)) {
            throw new Error("Expected the field `company_url` to be a primitive type in the JSON string but got " + data['company_url']);
        }
        // ensure the json data is a string
        if (data['job_title'] && !(typeof data['job_title'] === 'string' || data['job_title'] instanceof String)) {
            throw new Error("Expected the field `job_title` to be a primitive type in the JSON string but got " + data['job_title']);
        }
        // ensure the json data is a string
        if (data['job_url'] && !(typeof data['job_url'] === 'string' || data['job_url'] instanceof String)) {
            throw new Error("Expected the field `job_url` to be a primitive type in the JSON string but got " + data['job_url']);
        }
        // ensure the json data is a string
        if (data['list_date'] && !(typeof data['list_date'] === 'string' || data['list_date'] instanceof String)) {
            throw new Error("Expected the field `list_date` to be a primitive type in the JSON string but got " + data['list_date']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }

        return true;
    }


}



/**
 * @member {String} company
 */
Job.prototype['company'] = undefined;

/**
 * @member {String} company_url
 */
Job.prototype['company_url'] = undefined;

/**
 * @member {String} job_title
 */
Job.prototype['job_title'] = undefined;

/**
 * @member {String} job_url
 */
Job.prototype['job_url'] = undefined;

/**
 * @member {String} list_date
 */
Job.prototype['list_date'] = undefined;

/**
 * @member {String} location
 */
Job.prototype['location'] = undefined;






export default Job;

