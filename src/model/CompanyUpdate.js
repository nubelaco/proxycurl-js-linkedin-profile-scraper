/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyUpdatePostedOn from './CompanyUpdatePostedOn';

/**
 * The CompanyUpdate model module.
 * @module model/CompanyUpdate
 * @version 1.0.0
 */
class CompanyUpdate {
    /**
     * Constructs a new <code>CompanyUpdate</code>.
     * @alias module:model/CompanyUpdate
     */
    constructor() { 
        
        CompanyUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyUpdate} obj Optional instance to populate.
     * @return {module:model/CompanyUpdate} The populated <code>CompanyUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyUpdate();

            if (data.hasOwnProperty('article_link')) {
                obj['article_link'] = ApiClient.convertToType(data['article_link'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('posted_on')) {
                obj['posted_on'] = CompanyUpdatePostedOn.constructFromObject(data['posted_on']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('total_likes')) {
                obj['total_likes'] = ApiClient.convertToType(data['total_likes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['article_link'] && !(typeof data['article_link'] === 'string' || data['article_link'] instanceof String)) {
            throw new Error("Expected the field `article_link` to be a primitive type in the JSON string but got " + data['article_link']);
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // validate the optional field `posted_on`
        if (data['posted_on']) { // data not null
          CompanyUpdatePostedOn.validateJSON(data['posted_on']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * The URL for which the post links out to
 * @member {String} article_link
 */
CompanyUpdate.prototype['article_link'] = undefined;

/**
 * The URL to the image to the post (if it exists)
 * @member {String} image
 */
CompanyUpdate.prototype['image'] = undefined;

/**
 * @member {module:model/CompanyUpdatePostedOn} posted_on
 */
CompanyUpdate.prototype['posted_on'] = undefined;

/**
 * The body of the update
 * @member {String} text
 */
CompanyUpdate.prototype['text'] = undefined;

/**
 * The total likes a post has received
 * @member {Number} total_likes
 */
CompanyUpdate.prototype['total_likes'] = undefined;






export default CompanyUpdate;

