/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyDetailsFoundingDate from './CompanyDetailsFoundingDate';
import CompanyDetailsIpoDate from './CompanyDetailsIpoDate';

/**
 * The CompanyDetails model module.
 * @module model/CompanyDetails
 * @version 1.0.0
 */
class CompanyDetails {
    /**
     * Constructs a new <code>CompanyDetails</code>.
     * @alias module:model/CompanyDetails
     */
    constructor() { 
        
        CompanyDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyDetails} obj Optional instance to populate.
     * @return {module:model/CompanyDetails} The populated <code>CompanyDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyDetails();

            if (data.hasOwnProperty('ipo_status')) {
                obj['ipo_status'] = ApiClient.convertToType(data['ipo_status'], 'String');
            }
            if (data.hasOwnProperty('crunchbase_rank')) {
                obj['crunchbase_rank'] = ApiClient.convertToType(data['crunchbase_rank'], 'Number');
            }
            if (data.hasOwnProperty('founding_date')) {
                obj['founding_date'] = CompanyDetailsFoundingDate.constructFromObject(data['founding_date']);
            }
            if (data.hasOwnProperty('operating_status')) {
                obj['operating_status'] = ApiClient.convertToType(data['operating_status'], 'String');
            }
            if (data.hasOwnProperty('company_type')) {
                obj['company_type'] = ApiClient.convertToType(data['company_type'], 'String');
            }
            if (data.hasOwnProperty('contact_email')) {
                obj['contact_email'] = ApiClient.convertToType(data['contact_email'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('facebook_id')) {
                obj['facebook_id'] = ApiClient.convertToType(data['facebook_id'], 'String');
            }
            if (data.hasOwnProperty('twitter_id')) {
                obj['twitter_id'] = ApiClient.convertToType(data['twitter_id'], 'String');
            }
            if (data.hasOwnProperty('number_of_funding_rounds')) {
                obj['number_of_funding_rounds'] = ApiClient.convertToType(data['number_of_funding_rounds'], 'Number');
            }
            if (data.hasOwnProperty('total_funding_amount')) {
                obj['total_funding_amount'] = ApiClient.convertToType(data['total_funding_amount'], 'Number');
            }
            if (data.hasOwnProperty('stock_symbol')) {
                obj['stock_symbol'] = ApiClient.convertToType(data['stock_symbol'], 'String');
            }
            if (data.hasOwnProperty('ipo_date')) {
                obj['ipo_date'] = CompanyDetailsIpoDate.constructFromObject(data['ipo_date']);
            }
            if (data.hasOwnProperty('number_of_lead_investors')) {
                obj['number_of_lead_investors'] = ApiClient.convertToType(data['number_of_lead_investors'], 'Number');
            }
            if (data.hasOwnProperty('number_of_investors')) {
                obj['number_of_investors'] = ApiClient.convertToType(data['number_of_investors'], 'Number');
            }
            if (data.hasOwnProperty('total_fund_raised')) {
                obj['total_fund_raised'] = ApiClient.convertToType(data['total_fund_raised'], 'Number');
            }
            if (data.hasOwnProperty('number_of_investments')) {
                obj['number_of_investments'] = ApiClient.convertToType(data['number_of_investments'], 'Number');
            }
            if (data.hasOwnProperty('number_of_lead_investments')) {
                obj['number_of_lead_investments'] = ApiClient.convertToType(data['number_of_lead_investments'], 'Number');
            }
            if (data.hasOwnProperty('number_of_exits')) {
                obj['number_of_exits'] = ApiClient.convertToType(data['number_of_exits'], 'Number');
            }
            if (data.hasOwnProperty('number_of_acquisitions')) {
                obj['number_of_acquisitions'] = ApiClient.convertToType(data['number_of_acquisitions'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ipo_status'] && !(typeof data['ipo_status'] === 'string' || data['ipo_status'] instanceof String)) {
            throw new Error("Expected the field `ipo_status` to be a primitive type in the JSON string but got " + data['ipo_status']);
        }
        // validate the optional field `founding_date`
        if (data['founding_date']) { // data not null
          CompanyDetailsFoundingDate.validateJSON(data['founding_date']);
        }
        // ensure the json data is a string
        if (data['operating_status'] && !(typeof data['operating_status'] === 'string' || data['operating_status'] instanceof String)) {
            throw new Error("Expected the field `operating_status` to be a primitive type in the JSON string but got " + data['operating_status']);
        }
        // ensure the json data is a string
        if (data['company_type'] && !(typeof data['company_type'] === 'string' || data['company_type'] instanceof String)) {
            throw new Error("Expected the field `company_type` to be a primitive type in the JSON string but got " + data['company_type']);
        }
        // ensure the json data is a string
        if (data['contact_email'] && !(typeof data['contact_email'] === 'string' || data['contact_email'] instanceof String)) {
            throw new Error("Expected the field `contact_email` to be a primitive type in the JSON string but got " + data['contact_email']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['facebook_id'] && !(typeof data['facebook_id'] === 'string' || data['facebook_id'] instanceof String)) {
            throw new Error("Expected the field `facebook_id` to be a primitive type in the JSON string but got " + data['facebook_id']);
        }
        // ensure the json data is a string
        if (data['twitter_id'] && !(typeof data['twitter_id'] === 'string' || data['twitter_id'] instanceof String)) {
            throw new Error("Expected the field `twitter_id` to be a primitive type in the JSON string but got " + data['twitter_id']);
        }
        // ensure the json data is a string
        if (data['stock_symbol'] && !(typeof data['stock_symbol'] === 'string' || data['stock_symbol'] instanceof String)) {
            throw new Error("Expected the field `stock_symbol` to be a primitive type in the JSON string but got " + data['stock_symbol']);
        }
        // validate the optional field `ipo_date`
        if (data['ipo_date']) { // data not null
          CompanyDetailsIpoDate.validateJSON(data['ipo_date']);
        }

        return true;
    }


}



/**
 * IPO status of the company
 * @member {String} ipo_status
 */
CompanyDetails.prototype['ipo_status'] = undefined;

/**
 * A measure of prominence of this company by Crunchbase
 * @member {Number} crunchbase_rank
 */
CompanyDetails.prototype['crunchbase_rank'] = undefined;

/**
 * @member {module:model/CompanyDetailsFoundingDate} founding_date
 */
CompanyDetails.prototype['founding_date'] = undefined;

/**
 * Status of the company's operational status
 * @member {String} operating_status
 */
CompanyDetails.prototype['operating_status'] = undefined;

/**
 * Type of company
 * @member {String} company_type
 */
CompanyDetails.prototype['company_type'] = undefined;

/**
 * General contact email of the company
 * @member {String} contact_email
 */
CompanyDetails.prototype['contact_email'] = undefined;

/**
 * General contact number of the company
 * @member {String} phone_number
 */
CompanyDetails.prototype['phone_number'] = undefined;

/**
 * ID of the company's official Facebook account
 * @member {String} facebook_id
 */
CompanyDetails.prototype['facebook_id'] = undefined;

/**
 * ID of the company's official Twitter account
 * @member {String} twitter_id
 */
CompanyDetails.prototype['twitter_id'] = undefined;

/**
 * Total rounds of funding that this company has raised
 * @member {Number} number_of_funding_rounds
 */
CompanyDetails.prototype['number_of_funding_rounds'] = undefined;

/**
 * Total venture capital raised by this company
 * @member {Number} total_funding_amount
 */
CompanyDetails.prototype['total_funding_amount'] = undefined;

/**
 * Stock symbol of this public company
 * @member {String} stock_symbol
 */
CompanyDetails.prototype['stock_symbol'] = undefined;

/**
 * @member {module:model/CompanyDetailsIpoDate} ipo_date
 */
CompanyDetails.prototype['ipo_date'] = undefined;

/**
 * Total lead investors
 * @member {Number} number_of_lead_investors
 */
CompanyDetails.prototype['number_of_lead_investors'] = undefined;

/**
 * Total investors
 * @member {Number} number_of_investors
 */
CompanyDetails.prototype['number_of_investors'] = undefined;

/**
 * The total amount of funds raised (by this VC firm) to be deployed as subsidiary investments (applicable only for VC firms)
 * @member {Number} total_fund_raised
 */
CompanyDetails.prototype['total_fund_raised'] = undefined;

/**
 * Total investments made by this VC firm (applicable only for VC firms)
 * @member {Number} number_of_investments
 */
CompanyDetails.prototype['number_of_investments'] = undefined;

/**
 * Total investments that was led by this VC firm (applicable only for VC firms)
 * @member {Number} number_of_lead_investments
 */
CompanyDetails.prototype['number_of_lead_investments'] = undefined;

/**
 * Total exits by this VC (applicable only for VC firms)
 * @member {Number} number_of_exits
 */
CompanyDetails.prototype['number_of_exits'] = undefined;

/**
 * Total companies acquired by this company
 * @member {Number} number_of_acquisitions
 */
CompanyDetails.prototype['number_of_acquisitions'] = undefined;






export default CompanyDetails;

