/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanySearchResult from './CompanySearchResult';

/**
 * The CompanySearch model module.
 * @module model/CompanySearch
 * @version 1.0.0
 */
class CompanySearch {
    /**
     * Constructs a new <code>CompanySearch</code>.
     * @alias module:model/CompanySearch
     */
    constructor() { 
        
        CompanySearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanySearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanySearch} obj Optional instance to populate.
     * @return {module:model/CompanySearch} The populated <code>CompanySearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanySearch();

            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [CompanySearchResult]);
            }
            if (data.hasOwnProperty('next_page')) {
                obj['next_page'] = ApiClient.convertToType(data['next_page'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanySearch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanySearch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['results'])) {
            throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
        }
        // validate the field `results` (array)
        for (const item of data['results']) {
            CompanySearchResult.validateJsonObject(item);
        };
        // ensure the json data is a string
        if (data['next_page'] && !(typeof data['next_page'] === 'string' || data['next_page'] instanceof String)) {
            throw new Error("Expected the field `next_page` to be a primitive type in the JSON string but got " + data['next_page']);
        }

        return true;
    }


}

/**
 *                  A list of CompanySearchResult objects.             
 * @member {Array.<module:model/CompanySearchResult>} results
 */
CompanySearch.prototype['results'] = undefined;

/**
 *                  The URL to the next page of search results.             
 * @member {String} next_page
 */
CompanySearch.prototype['next_page'] = undefined;

export default CompanySearch;

