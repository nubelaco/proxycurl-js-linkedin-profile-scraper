/**
 * Proxycurl API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkedinJobCompany from './LinkedinJobCompany';
import LinkedinJobLocation from './LinkedinJobLocation';

/**
 * The LinkedinJob model module.
 * @module model/LinkedinJob
 * @version 1.0.0
 */
class LinkedinJob {
    /**
     * Constructs a new <code>LinkedinJob</code>.
     * @alias module:model/LinkedinJob
     */
    constructor() { 
        
        LinkedinJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkedinJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkedinJob} obj Optional instance to populate.
     * @return {module:model/LinkedinJob} The populated <code>LinkedinJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkedinJob();

            if (data.hasOwnProperty('linkedin_internal_id')) {
                obj['linkedin_internal_id'] = ApiClient.convertToType(data['linkedin_internal_id'], 'String');
            }
            if (data.hasOwnProperty('job_description')) {
                obj['job_description'] = ApiClient.convertToType(data['job_description'], 'String');
            }
            if (data.hasOwnProperty('apply_url')) {
                obj['apply_url'] = ApiClient.convertToType(data['apply_url'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = LinkedinJobLocation.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = LinkedinJobCompany.constructFromObject(data['company']);
            }
            if (data.hasOwnProperty('seniority_level')) {
                obj['seniority_level'] = ApiClient.convertToType(data['seniority_level'], 'String');
            }
            if (data.hasOwnProperty('industry')) {
                obj['industry'] = ApiClient.convertToType(data['industry'], ['String']);
            }
            if (data.hasOwnProperty('employment_type')) {
                obj['employment_type'] = ApiClient.convertToType(data['employment_type'], 'String');
            }
            if (data.hasOwnProperty('job_functions')) {
                obj['job_functions'] = ApiClient.convertToType(data['job_functions'], ['String']);
            }
            if (data.hasOwnProperty('total_applicants')) {
                obj['total_applicants'] = ApiClient.convertToType(data['total_applicants'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkedinJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkedinJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['linkedin_internal_id'] && !(typeof data['linkedin_internal_id'] === 'string' || data['linkedin_internal_id'] instanceof String)) {
            throw new Error("Expected the field `linkedin_internal_id` to be a primitive type in the JSON string but got " + data['linkedin_internal_id']);
        }
        // ensure the json data is a string
        if (data['job_description'] && !(typeof data['job_description'] === 'string' || data['job_description'] instanceof String)) {
            throw new Error("Expected the field `job_description` to be a primitive type in the JSON string but got " + data['job_description']);
        }
        // ensure the json data is a string
        if (data['apply_url'] && !(typeof data['apply_url'] === 'string' || data['apply_url'] instanceof String)) {
            throw new Error("Expected the field `apply_url` to be a primitive type in the JSON string but got " + data['apply_url']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          LinkedinJobLocation.validateJSON(data['location']);
        }
        // validate the optional field `company`
        if (data['company']) { // data not null
          LinkedinJobCompany.validateJSON(data['company']);
        }
        // ensure the json data is a string
        if (data['seniority_level'] && !(typeof data['seniority_level'] === 'string' || data['seniority_level'] instanceof String)) {
            throw new Error("Expected the field `seniority_level` to be a primitive type in the JSON string but got " + data['seniority_level']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['industry'])) {
            throw new Error("Expected the field `industry` to be an array in the JSON data but got " + data['industry']);
        }
        // ensure the json data is a string
        if (data['employment_type'] && !(typeof data['employment_type'] === 'string' || data['employment_type'] instanceof String)) {
            throw new Error("Expected the field `employment_type` to be a primitive type in the JSON string but got " + data['employment_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['job_functions'])) {
            throw new Error("Expected the field `job_functions` to be an array in the JSON data but got " + data['job_functions']);
        }

        return true;
    }


}



/**
 * @member {String} linkedin_internal_id
 */
LinkedinJob.prototype['linkedin_internal_id'] = undefined;

/**
 * @member {String} job_description
 */
LinkedinJob.prototype['job_description'] = undefined;

/**
 * @member {String} apply_url
 */
LinkedinJob.prototype['apply_url'] = undefined;

/**
 * @member {String} title
 */
LinkedinJob.prototype['title'] = undefined;

/**
 * @member {module:model/LinkedinJobLocation} location
 */
LinkedinJob.prototype['location'] = undefined;

/**
 * @member {module:model/LinkedinJobCompany} company
 */
LinkedinJob.prototype['company'] = undefined;

/**
 * @member {String} seniority_level
 */
LinkedinJob.prototype['seniority_level'] = undefined;

/**
 * @member {Array.<String>} industry
 */
LinkedinJob.prototype['industry'] = undefined;

/**
 * @member {String} employment_type
 */
LinkedinJob.prototype['employment_type'] = undefined;

/**
 * @member {Array.<String>} job_functions
 */
LinkedinJob.prototype['job_functions'] = undefined;

/**
 * @member {Number} total_applicants
 */
LinkedinJob.prototype['total_applicants'] = undefined;






export default LinkedinJob;

